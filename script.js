let questions = [
    ["Кольцо многочленов над полем.", "Наибольший общий делитель.", "Алгоритм Евклида.", "Линейное выражение НОД."],
    ["Неприводимость многочленов.", "Основная теорема арифметики для многочленов."],
    ["Корни многочленов.", "Теорема Безу.", "Формальная производная.", "Кратные корни."],
    ["Лемма Даламбера.", "Основная теорема алгебры (схема доказательства)."],
    ["Инвариантные подпространства.", "Собственные векторы и собственные значения.", "Характеристический многочлен и его свойства.", "Инвариантность следа и определителя матрицы оператора."],
    ["Линейная независимость собственных векторов, имеющих попарно различные собственные значения.", "Алгебраическая и геометрическая кратности собственного значения.", "Условия диагонализируемости линейного оператора."],
    ["Приведение матрицы преобразования к треугольному виду.", "Теорема Гамильтона-Кэли (случай, когда характеристический многочлен линейного оператора раскладывается на линейные множители)."],
    ["Корневое подпространство линейного оператора.", "Свойства корневых подпространств.", "Разложение пространства в прямую сумму корневых подпространств (случай, когда характеристический многочлен линейного оператора раскладывается на линейные множители)."],
    ["Циклические подпространства.", "Теорема о нильпотентном операторе.", "Жорданова нормальная форма и жорданов базис линейного оператора. (Теорема существования жорданова базиса)."],
    ["Жорданова диаграмма.", "Метод ее построения без поиска жорданова базиса.", "Теорема о единственности жордановой нормальной формы с точностью до перестановки клеток."],
    ["Аннулирующий и минимальный многочлен линейного оператора.", "Связь минимального многочлена с жордановой нормальной формой."],
    ["Норма в линейном пространстве.", "Норма линейного оператора.", "Вычисление многочлена и аналитической функции от линейного оператора."],
    ["Линейные рекурренты.", "Общий вид линейной рекурренты над произвольным полем (случай, когда характеристический многочлен раскладывается на линейные множители)."],
    ["Билинейные функции.", "Координатная запись билинейной функции.", "Матрица билинейной функции и ее изменение при замене базиса.", "Ортогональное дополнение к подпространству относительно симметричной (кососимметричной) билинейной функции и его свойства."],
    ["Симметричные билинейные и квадратичные функции, связь между ними.", "Поляризационное тождество.", "Метод Лагранжа приведения квадратичной формы к каноническому виду."],
    ["Индексы инерции квадратичной формы в действительном линейном пространстве.", "Закон инерции.", "Метод Якоби приведения квадратичной формы к диагональному виду."],
    ["Положительно определенные квадратичные функции.", "Критерий Сильвестра.", "Кососимметрические билинейные функции, приведение их к каноническому виду."],
    ["Полуторалинейные формы в комплексном линейном пространстве.", "Эрмитовы полуторалиейные и квадратичные формы, связь между ними.", "Приведение их к каноническому виду.", "Закон инерции для эрмитовых квадратичных форм.", "Критерий Сильвестра."],
    ["Евклидово и эрмитово пространство.", "Выражение скалярного произведения в координатах.", "Матрица Грама системы векторов и ее свойства.", "Неравенства Коши-Буняковского и треугольника."],
    ["Ортонормированные базисы и ортогональные (унитарные) матрицы.", "Существование ортонормированного базиса в пространстве со скалярным произведением.", "Изоморфизм евклидовых и эрмитовых пространств.", "Канонический изоморфизм евклидова пространства и сопряженного к нему."],
    ["Ортогональное дополнение к подпространству.", "Задача об ортогональной проекции и ортогональной составляющей.", "Процедура ортогонализации Грама-Шмидта.", "Объем параллелепипеда."],
    ["Преобразование, сопряженное данному.", "Существование и единственность такого преобразования, его свойства.", "Теорема Фредгольма."],
    ["Самосопряженное линейное преобразование.", "Свойства самосопряженных преобразований.", "Основная теорема о самосопряженных операторах (существование ортонормированного базиса из собственных векторов)."],
    ["Ортогональные преобразования и их свойства.", "Канонический вид ортогонального преобразования.", "Инвариантные подпространства малых размерностей для линейного оператора в действительном линейном пространстве."],
    ["Полярное разложение линейного преобразования в евклидовом пространстве.", "Единственность полярного разложения для невырожденного оператора."],
    ["Приведение квадратичной формы в пространстве со скалярным произведением к главным осям.", "Одновременное приведение пары квадратичных форм к диагональному виду."],
    ["Унитарные преобразования, их свойства.", "Канонический вид унитарного преобразования."],
    ["Тензоры типа (p, q).", "Тензорное произведение тензоров.", "Координатная запись тензора, изменение координат при замене базиса, тензорный базис."],
    ["Алгебраические операции над тензорами (перестановка индексов, свертка).", "Симметричные и кососимметричные тензоры.", "Операторы симметрирования и альтернирования и их свойства."]
];

let totalScore = 0;
let evaluatedTickets = 0;

const startBtn = document.getElementById("startBtn");
const evaluation = document.getElementById("evaluation");
const ticketInfo = document.getElementById("ticket-info");
const question1 = document.getElementById("question1");
const question2 = document.getElementById("question2");
const score = document.getElementById("score");

const btn0 = document.getElementById("btn0");
const btn1 = document.getElementById("btn1");
const btn2 = document.getElementById("btn2");
const skipBtn = document.getElementById("skipBtn");

function getRandomQuestions() {
    let theme1Index = Math.floor(Math.random() * Math.floor(questions.length / 2));
    let theme2Index = Math.floor(Math.random() * (questions.length - Math.floor(questions.length / 2)));
    theme2Index += Math.floor(questions.length / 2);
    const question1Index = Math.floor(Math.random() * (questions[theme1Index].length - 1));
    const question2Index = Math.floor(Math.random() * (questions[theme2Index].length - 1));
    console.log(theme1Index, " ", question1Index);
    console.log(theme2Index, " ", question2Index);
    let question1Text = questions[theme1Index][question1Index];
    if (Math.random() < 0.6) {
        question1Text += " " + questions[theme1Index][question1Index + 1];
    }
    let question2Text = questions[theme2Index][question2Index];
    if (Math.random() < 0.6) {
        question2Text += " " + questions[theme2Index][question2Index + 1];
    }
    return [question1Text, question2Text];
}

function startTest() {
    const [q1, q2] = getRandomQuestions();
    question1.textContent = q1;
    question2.textContent = q2;
    startBtn.style.display = "none";
    evaluation.style.display = "block";
    ticketInfo.style.display = "block";
}

let pts = -1;

function evaluate(points) {
    resetButtons();
    pts = points;
    // evaluatedTickets++;

    if (points === 0) {
        btn0.style.backgroundColor = "#d14a4a";
    } else if (points === 1) {
        btn1.style.backgroundColor = "#c1a041";
    } else {
        btn2.style.backgroundColor = "#7ac16f";
    }
    skipBtn.textContent = "Следующий билет";
    // setTimeout(() => {
    //     const [q1, q2] = getRandomQuestions();
    //     question1.textContent = q1;
    //     question2.textContent = q2;
    //     resetButtons();
    // }, 1000);
}

function resetButtons() {
    btn0.style.backgroundColor = "#4a87d3";
    btn1.style.backgroundColor = "#4a87d3";
    btn2.style.backgroundColor = "#4a87d3";
}

function skipTicket() {
    if (pts !== -1) {
        totalScore += pts;
        evaluatedTickets++;
        pts = -1;
        score.textContent = (totalScore / evaluatedTickets).toFixed(2);
    }
    skipBtn.textContent = "Пропустить";

    resetButtons();
    const [q1, q2] = getRandomQuestions();
    question1.textContent = q1;
    question2.textContent = q2;
}

startBtn.addEventListener("click", startTest);
btn0.addEventListener("click", () => evaluate(0));
btn1.addEventListener("click", () => evaluate(1));
btn2.addEventListener("click", () => evaluate(2));
skipBtn.addEventListener("click", skipTicket);